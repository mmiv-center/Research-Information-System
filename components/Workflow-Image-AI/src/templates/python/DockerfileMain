FROM continuumio/miniconda3 AS build
#
# build from ror-enabled directory as (replace name of conda_env with name used in requirements.yml):
#    docker build --no-cache --build-arg conda_env="workflow_ai_test" -f src/templates/python/DockerfileMain -t haukebartsch/fiona-component-python:latest .
#

WORKDIR /app
COPY src/templates/python/entrypoint.sh /app

#
# A derived container should do the following
#

# Create the environment:
#COPY .ror/virt/requirements.yml .
#RUN conda env create -f requirements.yml

# Set value to the name of your conda environment in requirements.yml.
# Optional: provide it to docker build as a variable
#    --build-arg conda_env="workflow_ai_test"
#ARG conda_env=workflow_ai_test
ARG conda_env
ENV DEFAULT_CONDA_ENV=$conda_env

LABEL "com.ror.vendor"="MMIV.no" \
    version="1.1" \
    com.ror.conda.env.name="${DEFAULT_CONDA_ENV}" \
    description="Example docker container for workflow AI on the research information system at MMIV.no."

# Make RUN commands use the new environment:
#RUN echo "conda activate ${conda_env}" >> ~/.bashrc
#SHELL ["/bin/bash", "--login", "-c"]

# Demonstrate the environment is activated:
#RUN echo "Make sure fastMONAI is installed:"
#RUN python -c "import fastMONAI"

RUN apt-get update -qq && apt-get install -yq build-essential \
    cmake git wget libboost-filesystem1.74-dev libboost-timer1.74-dev \
    libtbb-dev libfreetype-dev libboost-program-options1.74-dev \
    libxml2-dev zlib1g-dev libzip-dev zipcmp zipmerge ziptool jq \
    && rm -rf /var/lib/apt/lists/*

# get a better cmake (required for pr2mask)
RUN wget https://github.com/Kitware/CMake/releases/download/v3.24.1/cmake-3.24.1-Linux-x86_64.sh \
      -q -O /tmp/cmake-install.sh \
      && chmod u+x /tmp/cmake-install.sh \
      && mkdir /opt/cmake-3.24.1 \
      && /tmp/cmake-install.sh --skip-license --prefix=/opt/cmake-3.24.1 \
      && rm /tmp/cmake-install.sh \
      && ln -s /opt/cmake-3.24.1/bin/* /usr/local/bin

# install itk
RUN cd /tmp/ && wget https://github.com/InsightSoftwareConsortium/ITK/releases/download/v5.4.2/InsightToolkit-5.4.2.tar.gz \
    && cd /opt/ && tar xzvf /tmp/InsightToolkit-5.4.2.tar.gz && cd /opt/InsightToolkit-5.4.2 \
    && mkdir bin && cd bin && cmake -DModule_MorphologicalContourInterpolation:BOOL=ON .. && make -j 4 && rm /tmp/InsightToolkit-5.4.2.tar.gz

# install dcmtk
RUN cd / && git clone https://github.com/DCMTK/dcmtk.git && cd dcmtk && cmake . && make -j4

# install pr2mask
RUN mkdir /pr2mask && cd /pr2mask && git clone https://github.com/mmiv-center/pr2mask.git . \
    && cmake . && make -j 4


FROM continuumio/miniconda3

COPY --from=build /opt/InsightToolkit-5.3.0/bin /opt/InsightToolkit-5.4.2/bin
COPY --from=build /dcmtk /dcmtk
COPY --from=build /pr2mask /pr2mask

ARG conda_env
ENV DEFAULT_CONDA_ENV=$conda_env

LABEL "com.ror.vendor"="MMIV.no" \
    version="1.1" \
    com.ror.conda.env.name="${DEFAULT_CONDA_ENV}" \
    description="Example docker container for workflow AI on the research information system at MMIV.no."

# install required libaries
RUN --mount=type=cache,target=/var/cache/apt \
    --mount=type=cache,target=/var/lib/apt \
    apt-get update -qq && apt-get install -yq \
    libboost-filesystem1.74-dev libboost-timer1.74-dev \
    libtbb-dev libfreetype-dev libboost-program-options1.74-dev \
    libxml2-dev zlib1g-dev libzip-dev zipcmp zipmerge ziptool jq

ENV REPORT_FONT_PATH=/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf
ENV DCMDICTPATH=/dcmtk/dcmdata/data/dicom.dic

# The code to run when container is started:
# RUN ["chmod", "+x", "/app/entrypoint.sh"]
